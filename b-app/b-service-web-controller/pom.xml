<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.ttknp</groupId>
        <artifactId>abc-properties-service</artifactId>
        <relativePath>../../abc-parent/abc-properties-service</relativePath>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <groupId>com.ttknp</groupId>
    <artifactId>b-service-web-controller</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>b-service-web-controller</name>
    <description>b-service-web-controller</description>
    <url/>
    <licenses>
        <license/>
    </licenses>
    <developers>
        <developer/>
    </developers>
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>
    <properties>
        <java.version>17</java.version>
    </properties>
    <dependencies>
        <!--
        ** two dependencies for start spring boot are on parent module
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        -->

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>6.2.3</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>6.2.3</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--
                To specify the output directory for your Spring Boot executable JAR file after the build process,
                you typically configure your build tool (Maven or Gradle) to copy or move the generated JAR to the desired location.
                You can use the maven-antrun-plugin to copy the JAR to a different directory during the install phase.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version> <!-- Use a recent version -->
                <executions>
                    <execution>
                        <phase>install</phase>
                        <configuration>
                            <target>
                                <!-- tofile="" is part to sent the copy -->
                                <copy file="${project.build.directory}/${project.artifactId}.jar"
                                      tofile="B:/practice-java-one-jetbrains/spring-boot-skills/lab_core_36/sumary-spring-boot-career/libs/b-service-web-controller.jar"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
